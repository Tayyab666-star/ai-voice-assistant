[tool:pytest]
# Pytest configuration for AI Voice Assistant

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    slow: Slow running tests
    bilingual: Bilingual functionality tests
    external: Tests requiring external services
    database: Tests requiring database
    mock: Tests using mocked services

# Test output configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --cov=shared
    --cov=call_handler
    --cov=stt_service
    --cov=tts_service
    --cov=nlu_service
    --cov=appointment_service
    --cov=sms_service
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --junitxml=test-results.xml

# Async test configuration
asyncio_mode = auto

# Minimum Python version
minversion = 3.8

# Test timeout (in seconds)
timeout = 300

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:twilio.*
    ignore::UserWarning:openai.*

# Log configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test collection configuration
collect_ignore = [
    "setup.py",
    "build",
    "dist",
    ".tox",
    "venv",
    ".venv"
]

# Parallel test execution
# Uncomment to enable parallel testing
# -n auto